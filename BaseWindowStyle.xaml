<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style x:Key="BaseWindow" TargetType="Window">
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                        CaptionHeight="30"
                        ResizeBorderThickness="3"
                        CornerRadius="2"
                        NonClientFrameEdges="None"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource LightBackgroundBrush}"/>
    </Style>

    <Style x:Key="WindowAssetsFont" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Button">
        <Setter Property="BorderThickness" Value="0.5"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="Margin" Value="0,2,0,0"/>
    </Style>

    <!-- Unused -->
    <Style TargetType="Button" x:Key="ButtonHover">
        <Setter Property="Background" Value="#B1DDF1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#63BBE3">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#D6E3F8"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Chrome Window Buttons -->
    <Style TargetType="Button" x:Key="WindowChromeButton">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <!-- <Setter Property="FontFamily" Value="Webdings"/> -->
        <!-- Backup if no FontFamily="Segoe MDL2 Assets" -->
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="45"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Button" x:Key="WindowChromeButtonRed" BasedOn="{StaticResource WindowChromeButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="WindowChromeButtonMaximize" BasedOn="{StaticResource WindowChromeButton}">
        <Setter Property="Visibility" Value="Visible"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                             Value="Maximized">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                             Value="Normal">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="WindowChromeButtonRestore" BasedOn="{StaticResource WindowChromeButton}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                             Value="Maximized">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                             Value="Normal">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!-- End Chrome Window Buttons -->

    <!-- Add to avoid border disappearing when window is maximised -->
    <Style TargetType="Border" x:Key="WindowBorderMaximize">
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                    Value="Maximized">
                <Setter Property="Margin" Value="7"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                    Value="Normal">
                <Setter Property="Margin" Value="0"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Menu and MenuItem ControlTemplate
        https://stackoverflow.com/questions/24698755/how-to-change-the-background-of-the-menuitem-on-mouseover-in-wpf -->

    <Style TargetType="Menu" x:Key="CustomMenu">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Menu">
                    <Border Background="{TemplateBinding Background}">
                        <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>